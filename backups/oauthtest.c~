#include <stdio.h>
#include <stdio_ext.h>
#include <stdlib.h>
#include <string.h>
#include <oauth.h>

int get_twitter_rq(const char *consumer_key, const char *consumer_secret, char **key, char **secret){

    const char *request_token_uri = "https://api.twitter.com/oauth/request_token?oauth_callback=oob";

    char *req_url = NULL;
    char *reply;
    int returnCode = 0;

    req_url = oauth_sign_url2(request_token_uri, NULL, OA_HMAC, NULL, consumer_key, consumer_secret, NULL, NULL);

    reply = oauth_http_get(req_url, NULL);
    if(reply){
        int rc;
        char **rv = NULL;

        rc = oauth_split_url_parameters(reply, &rv);
        qsort(rv, rc, sizeof(char *), oauth_cmpstringp);
        if(rc==3 && !strncmp(rv[1], "oauth_token=", 11) && !strncmp(rv[2], "oauth_token_secret=", 18)){
            *key = strdup(&(rv[1][12]));
            *secret = strdup(&(rv[2][19]));
            returnCode = 1;
        }
        if(rv) free(rv);
    }
    if(reply) free(reply);
    if(req_url) free(req_url);
    return returnCode;
}

int get_twitter_at(char *code, const char *consumer_key, const char *consumer_secret, char *request_key, char *request_secret, char **key, char **secret){

    char *postargs = NULL;
    char *req_url = NULL;
    char *reply = NULL;
    int returnCode = 0;


    char *c = malloc(strlen("https://api.twitter.com/oauth/access_token?oauth_verifier=") + strlen(code) + 2);
    strcpy(c,"https://api.twitter.com/oauth/access_token?oauth_verifier=");
    strcat(c, code);
    req_url = oauth_sign_url2(c, &postargs, OA_HMAC, NULL, consumer_key, consumer_secret, request_key, request_secret);

    reply = oauth_http_post(req_url, postargs);
    if(reply){
        int rc;
        char **rv = NULL;

        printf("HTTP-reply: %s\n", reply);
        rc = oauth_split_url_parameters(reply, &rv);
        qsort(rv, rc, sizeof(char *), oauth_cmpstringp);
        if( rc==4 
                && !strncmp(rv[0],"oauth_token=",11)
                && !strncmp(rv[1],"oauth_token_secret=",18) ){
            *key=strdup(&(rv[0][12]));
            *secret=strdup(&(rv[1][19]));
            returnCode = 1;
        }
        if(rv) free(rv);
    }
    if(postargs) free(postargs);
    if(req_url) free(req_url);
    if(reply) free(reply);
    return returnCode;
}

char *twitter_make_request(char *uri, const char *consumer_key, const char *consumer_secret, char *access_key, char *access_secret){

    char *url = NULL;
    char *postargs = NULL;
    char *reply = NULL;

    url = oauth_sign_url2(uri, &postargs, OA_HMAC, NULL, consumer_key, consumer_secret, access_key, access_secret);

    reply = oauth_http_post(url, postargs);

    if(url) free(url);
    if(postargs) free(postargs);
    return reply;
}
/* 
 * a example requesting and parsing a request-token from an OAuth service-provider
 * excercising the oauth-HTTP GET function. - it is almost the same as 
 * \ref request_token_example_post below. 
 */
void request_token_example_get(void) {
  const char *consumer_key        = "yrygVBbFLLxx5F8iE0s4Q"; //< consumer key
  const char *consumer_secret      = "Luu7XIc4xdHOURm4w7DssFZhhC6IcICkMsY7Ckw08"; //< consumer secret

  char *request_key    = NULL; //< replied key
  char *request_secret = NULL; //< replied secret
  char *access_key     = NULL; //< Access token
  char *access_secret = NULL;
  char code [12];

  get_twitter_rq(consumer_key, consumer_secret, &request_key, &request_secret);

  printf("Please go to https://api.twitter.com/oauth/authorize?oauth_token=%s and enter the pin there provided\n\n", request_key);
  scanf("%s", code);
  __fpurge(stdin);

  get_twitter_at(code, consumer_key, consumer_secret, request_key, request_secret, &access_key, &access_secret);

  char tweet [200];
  printf("Please enter a tweet: ");
  fgets(tweet, sizeof(tweet), stdin);
  char *url = malloc(strlen("http://api.twitter.com/1/statuses/update.json?status=") + strlen(tweet) + 2);
  strcpy(url,"http://api.twitter.com/1/statuses/update.json?status=");
  strcat(url, tweet);

  twitter_make_request(url, consumer_key, consumer_secret, access_key, access_secret);

  if(url) free(url);
  if(request_key) free(request_key);
  if(request_secret) free(request_secret);
  if(access_key) free(access_key);
  if(access_secret) free(access_secret);
}

int main(int argc, char **argv){
    request_token_example_get();
}
