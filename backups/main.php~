<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Main extends CI_Controller {

    /**
     * Index Page for this controller.
     *
     * Maps to the following URL
     * 		http://example.com/index.php/welcome
     *	- or -
     * 		http://example.com/index.php/welcome/index
     *	- or -
     * Since this controller is set as the default controller in
     * config/routes.php, it's displayed at http://example.com/
     *
     * So any other public methods not prefixed with an underscore will
     * map to /index.php/welcome/<method_name>
     * @see http://codeigniter.com/user_guide/general/urls.html
     */
    public function index()
    {
        $params = array('redirect_uri' => BASEURL . 'main/auth/', 'scope' => 'user_photos,offline_access,email');
        $params2 = array('redirect_uri' => BASEURL . 'main/authSettings/', 'scope' => 'user_photos,offline_access,email');
        $this->load->view('stuff/index', array('url' =>
                    $this->facebook->getLoginUrl($params), 'urlset' => $this->facebook->getLoginUrl($params2)));
    }

    public function auth(){
        $this->facebook->getAccessToken();

        $user = $this->facebook->getUser();

        if ($user) {
            try {
                $user_profile = $this->facebook->api('/me');
            } catch (FacebookApiException $e) {
                error_log($e);
                $user = null;
                header('Location:http://superego.me/');
            }
        }

        if($_REQUEST['error'] == "access_denied"){
            header('Location:http://superego.me/');
        }

        $query = $this->db->get_where('lukesfuckingtable', array('uid' => $user));
        if ( $query->num_rows() > 0){
            $result = $query->result();
            $result = $result[0];
            header('Location: ' . BASEURL . $result->user);
        }

        $this->load->view('stuff/claimspace');
    }

    public function deleteAccount(){
        $this->facebook->getAccessToken();

        $user = $this->facebook->getUser();

        if ($user) {
            try {
                $user_profile = $this->facebook->api('/me');
            } catch (FacebookApiException $e) {
                error_log($e);
                $user = null;
                header('Location:http://superego.me/');
            }
        }

        $this->db->delete('lukesfuckingtable', array('uid' => $user));

        header('Location:http://superego.me/');

    }

    public function authSettings(){
        $this->facebook->getAccessToken();

        $user = $this->facebook->getUser();

        if ($user) {
            try {
                $user_profile = $this->facebook->api('/me');
            } catch (FacebookApiException $e) {
                error_log($e);
                $user = null;
                header('Location:http://superego.me/');
            }
        }

        $query = $this->db->get_where('lukesfuckingtable', array('uid' => $user));
        if ( $query->num_rows() == 0){
            header('Location: ' . BASEURL . 'main/auth');
        }
        $result = $query->result();
        $result = $result[0];

        $this->load->view('stuff/settings', array('url' =>
                    BASEURL.$result->user));
    }

    public function updateAccount(){
        $this->facebook->getAccessToken();

        $user = $this->facebook->getUser();

        if ($user) {
            try {
                $user_profile = $this->facebook->api('/me');
            } catch (FacebookApiException $e) {
                error_log($e);
                $user = null;
                header('Location:http://superego.me/');
            }
        }

        $query = $this->db->get_where('lukesfuckingtable', array('uid' => $user));
        if ( $query->num_rows() > 0){
            $result = $query->result();
            $result = $result[0];
            $username = $result->user;
        } else {
            die("There was an error");
        }

        $this->db->delete('lukesfuckingtable', array('uid' => $user));

        $photos = array();
        $friends = $this->facebook->api('/me/photos?limit=200');
        $offset = 200;
        while(count($friends['data']) > 0){
            foreach ($friends['data'] as $pic){
                array_push($photos, array('source' => $pic['source'], 'thumbnail' => $pic['picture']));
            }
            $friends = $this->facebook->api('/me/photos?limit=200&offset=' . $offset);
            $offset = $offset + 200;
        }

        $friends = $this->facebook->api('/me/friends?limit=5000');

        $insert = array('Name' => $user_profile['name'], 'user' => $username,
                'key' => $this->facebook->getAccessToken(),
                'friends' => count($friends['data']),
                'pics' => json_encode($photos),
                'countphoto' => count($photos),
                'uid' => $user_profile['id']
                );

        $this->db->insert('lukesfuckingtable', $insert);

        header('Location: ' . BASEURL . $username);
    }



    public function checkUsername(){
        $uname = $this->input->post('username');

        $query = $this->db->get_where('lukesfuckingtable', array('user' => $uname));
        if ($query->num_rows() > 0)
        {
            exit("1");
        }

        exit("0");
    }

    public function addUser($username){
        $this->facebook->getAccessToken();

        $user = $this->facebook->getUser();

        if ($user) {
            try {
                $user_profile = $this->facebook->api('/me');
            } catch (FacebookApiException $e) {
                error_log($e);
                $user = null;
                header('Location:http://superego.me/');
            }
        }

        $query = $this->db->get_where('lukesfuckingtable', array('user' => $username));
        if ($query->num_rows() > 0)
        {
            header('Location:' . BASEURL . 'main/auth');
        }

        $photos = array();
        $friends = $this->facebook->api('/me/photos?limit=200');
        $offset = 200;
        while(count($friends['data']) > 0){
            foreach ($friends['data'] as $pic){
                array_push($photos, array('source' => $pic['source'], 'thumbnail' => $pic['picture']));
            }
            $friends = $this->facebook->api('/me/photos?limit=200&offset=' . $offset);
            $offset = $offset + 200;
        }

        $friends = $this->facebook->api('/me/friends?limit=5000');

        $insert = array('Name' => $user_profile['name'], 'user' => $username,
                'key' => $this->facebook->getAccessToken(),
                'friends' => count($friends['data']),
                'pics' => json_encode($photos),
                'countphoto' => count($photos),
                'uid' => $user_profile['id']
                );

        $this->db->insert('lukesfuckingtable', $insert);

        header('Location: ' . BASEURL . $username);
    }

    public function showProfile($name){
        $query = $this->db->get_where('lukesfuckingtable', array('user' => $name));
        if ($query->num_rows() == 0)
        {
            die("Your user account does not exist! Oh NOES!");
        }
        $result = $query->result();
        $result = $result[0];

        $array = json_decode($result->pics);
        shuffle($array);

        $col1 = array();
        $col2 = array();
        $col3 = array();

        for($i = 0; $i < 15; $i++){
            if(count($array) >= 3){
            array_push($col1, array_pop($array));
            array_push($col2, array_pop($array));
            array_push($col3, array_pop($array));
            }
            if(count($array) == 2){
            array_push($col1, array_pop($array));
            array_push($col2, array_pop($array));
            }
            if(count($array) == 1){
            array_push($col1, array_pop($array));
            }
        }

        $temp = json_encode($array);

        $params = array('name' => $result->Name,
                'photos' => $result->countphoto,
                'friends' => $result->friends,
                'uid' => $result->uid,
                'col1' => $col1,
                'col2' => $col2,
                'col3' => $col3,
                'jsoncrap' => substr($temp, 1, -1)
                );

        $this->load->view('stuff/profile', $params);

    }
}

/* End of file welcome.php */
/* Location: ./application/controllers/welcome.php */
