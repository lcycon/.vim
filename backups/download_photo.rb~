require 'open-uri'

module DownloadPhotoJob

  @queue = :download_photo_queue

  def self.perform(url, source, account, avatar, hashtags) 
    puts "Executing Download Photo Job(Twitter) @ #{Time.now}"


    # If source isn't twitter, then we need to check yfrog or twitpic
    url = (source != "twitter") ? find_pic_url(url, source) : url

    # Download the photo - uses open-uri
    file = open(url)

    # Downcasing tags, and comma delimiting them for database storage
    hashtags.collect! { |x| x.downcase }
    tags = hashtags.join(',') 
    puts "Hashtags: #{tags}"

    # Saving to database
    begin
      p = Photo.create!(:source => source,
                        :source_id => tags,
                        :account => account,
                        :avatar => avatar,
                        :external_media_id => url,
                        :img => file,
                        :printable => hashtags.include?('viziorosebowl'),
                        :printed => false,
                        :priority => 0)
      p.url = p.img.url

      puts "Added Photo #{p.id} | from source: twitter | url: #{url}" if p.save
    rescue ActiveRecord::RecordInvalid
      puts "Invalid record, probably a duplicate"
    end
  end

  def self.find_pic_url(url, source)
    tries = 3
    if source == "yfrog"
      img_id='main_image'
    elsif source == "twitpic"
      img_id='photo-display'
    end
    begin
      doc = Nokogiri::HTML(open(url))
      el = doc.css("img##{img_id}")
      new_url = el.attr("src").value
    rescue
      if tries > 0
        tries -= 1
        retry
      end
    end
    new_url
  end

end
