/*
 * Filename: sum3.s
 * Author: Adam William Kuipers
 * Userid: cs30xwc
 * Description: Example SPARC assembly routine to sum 3 arguments and return
 *		the sum.
 *		Called from main()
 * Date: September 30, 2011
 * Sources of Help:
 */
 
	.global sum3 		! Declares the symbol to be globally visible so
	                        ! we can call this function from other modules
	
	.section ".text"        ! The text segment begins here

/*
 * Function name: sum3()
 * Function prototype: int sum3( int a, int b, int c );
 * Description: Sums 3 int arguments and returns the sum.
 * Parameters:
 * 	arg 1: int a -- 1st number to sum.
 * 	arg 2: int b -- 2nd number to sum.
 * 	arg 3: int c -- 3rd number to sum.
 * 
 * Side Effects: None.
 * Error Conditions: None.
 * Return Value: Sum of the 3 arguments.
 *
 * Registers Used:
 * 	%i0 - arg 1 -- 1st number to sum; also used to return the sum.
 * 	%i1 - arg 2 -- 2nd number to sum
 * 	%i2 - arg 3 -- 3rd number to sum
 *
 * 	%10 - scratch local reg. to store intermediate additional results
 */

sum3:
	save    %sp, -96, %sp    ! Save caller's window; if different than -96
				 ! then comment on how that value was calculated

	add 	%i0, %i1, %10 	 ! Add 1st two args, store result in a local reg
				 ! %10 = %i0 + %i1
	add 	%10, %i2, %10    ! Add 2nd arg to result above
	                         ! %10 = %10 + %i2

	mov     %10, %i0         ! Return value goes in %i0

	ret                      ! Return from subroutine
	restore                  ! Restore caller's window; in "ret" delay slot

